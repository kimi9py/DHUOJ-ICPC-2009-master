<?xml version="1.0" encoding="gb2312"?>
<PaperSetter checked="true">
    <PaperDetail xml:space="preserve"><PaperVersion>1</PaperVersion><PaperID>1</PaperID><PaperName>1</PaperName><PaperAuthor>1</PaperAuthor><PaperTotalTime unit="hour">5</PaperTotalTime><PaperStartTime zone="+8">1</PaperStartTime><PaperProblemSum>1</PaperProblemSum><PublicKey>MIHxMIGoBgcqhkjOOAQBMIGcAkEA/KaCzo4Syrom78z3EQ5SbbB4sF7ey80etKII864WF64B81uRpH5t9jQTxeEu0ImbzRMqzVDZkVG9xD7nN1kuFwIVAJYu3cw2nLqOuyYO5rahJtk0bjjFAkBnhHGyepz0TukaScUUfbGpqvJE8FpDTWSGkx0tFCcbnjUDC3H9c9oXkGmzLik1Yw4cIGI1TQ2iCmxBblC+eUykA0QAAkEA8ojKBedYrFoDBvrk2cvh998qmKFuHB0gXegkDXzHhk+yUprBGbpdLHVDWq8P7hPLyNPuviEvJoxz4x5kqiidgQ==</PublicKey><Signature>MCwCFBoTw7ym3FiJgiOUsonLdR9ZgRtdAhRKUxDwmpGFfm90hIkwUPiE+Llohw==</Signature><PaperReference><![CDATA[1]]></PaperReference><PaperDescribe></PaperDescribe></PaperDetail>
    <ProblemList encrypted="0">
        <ProblemArchive version="1.0" checked="false">
            <Title>Gem Squares</Title>
            <Author />
            <Problem contentType="html">
                <Description xml:space="preserve">You are given a board with 88 squares. In each square, there can be either a colored gem or no gem at all. Gems with different colors are represented by different integers. It is guaranteed that there are no more than two consecutive gems with the same color either in a row or in a column, and that there is not any gem above a blank square.&lt;BR&gt;&lt;BR&gt;

&lt;PRE&gt;
........
........
........
........
........
..43366.
..121556
44212335
&lt;/PRE&gt;&lt;BR&gt;
For two neighboring squares, you can exchange the gems.&lt;BR&gt;&lt;BR&gt;
&lt;PRE&gt;
........
........
........
........
........
..43366.
..111556
44222335
&lt;/PRE&gt;&lt;BR&gt;
If there are more than two consecutive gems with the same color in a row or in a column after exchange, these gems will be taken away simultaneously. Note that a gem could be counted both in its row and in its column; refer to the sample test cases for details.&lt;BR&gt;&lt;BR&gt;
&lt;PRE&gt;
........
........
........
........
........
..43366.
.....556
44...335
&lt;/PRE&gt;&lt;BR&gt;
If there is no gem under a gem, the gem will fall to the square below.&lt;BR&gt;&lt;BR&gt;
&lt;PRE&gt;
........
........
........
........
........
.....66.
.....556
44433335
&lt;/PRE&gt;&lt;BR&gt;
After all gems have fallen down to the lowest place, the procedure will be repeated. If there are more than two gems with the same color in a row or in a column, these gems will be taken away simultaneously. Then some gems will fall to the squares below, if there are no gems under those gems.&lt;BR&gt;&lt;BR&gt;
&lt;PRE&gt;
........
........
........
........
........
.....66.
.....556
.......5
&lt;/PRE&gt;
&lt;PRE&gt;
........
........
........
........
........
........
.....666
.....555
&lt;/PRE&gt;
&lt;PRE&gt;
........
........
........
........
........
........
........
........
&lt;/PRE&gt;&lt;BR&gt;
The procedure will be repeated until there is no gem that can be taken away.&lt;BR&gt;&lt;BR&gt;

Given a board with 8*8 squares, you task is to determine whether all gems can be taken away by a single exchange or not.</Description>
                <InputSpec xml:space="preserve">The input consists of several test cases. Each test case will be eight lines, and each line contains eight characters. If in a square there is no gem, '.' is used to identify it, otherwise an integer k is used to identify the gem¡¯s color, 1¡Ük¡Ü9.&lt;BR&gt;&lt;BR&gt;

There is a blank line between two consecutive test cases.&lt;BR&gt;&lt;BR&gt;

End of input is indicated by a line consisting of 0.</InputSpec>
                <OutputSpec xml:space="preserve">For each test case, output a single line. If all gems can be taken away by a single exchange, output "Yes"; otherwise output "No". &lt;BR&gt;&lt;BR&gt;

&lt;B&gt;Hint&lt;/B&gt;&lt;BR&gt;&lt;BR&gt;

You can also exchange a gem with a space in its neighbor.&lt;BR&gt;&lt;BR&gt;

For test case 2, all gems can be taken away by exchanging the leftmost "1" and the space on the right.</OutputSpec>
            </Problem>
            <TestData>
                <TimeLimit>10</TimeLimit>
                <InputFile />
                <OutputFile />
                <InputFormat inputType="eof">
                    <Terminator xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </InputFormat>
                <OutputFormat>
                    <Header xml:space="preserve" />
                    <Footer xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </OutputFormat>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">........
........
........
........
........
........
...11...
...11...

........
........
........
........
........
........
........
.11.11..

........
........
........
........
........
..21....
..12....
..21....

........
........
........
........
........
........
..565...
..656...

........
........
........
........
........
..313...
..121...
..232...

........
........
........
........
........
...212..
...121..
...212..

........
..1.11..
.11.11..
.22.22..
.22.22..
.11.11..
12212211
11212211

..3..7..
..2.66..
.276457.
.763345.
2647114.
64258917
21345895
12133589

...3....
...3....
...2....
...2....
...144..
...244..
.3313344
.3313344

........
........
........
........
........
........
........
11.11.11

........
........
........
........
........
........
........
11221122

........
........
........
........
2211....
2211....
1122....
1122....

........
........
........
.22122..
.22122..
.11211..
.22122..
.22122..

.11.11..
.22122..
.11211..
.22122..
.22122..
.11211..
.22122..
.22122..

.11211..
.22122..
.11211..
.22122..
.22122..
.11211..
.22122..
.22122..

........
........
.11.11..
.22122..
.22122..
.11211..
.22122..
.22122..

........
........
.11211..
.22122..
.22122..
.11211..
.22122..
.22122..

........
...2....
.11211..
.22122..
.22122..
.11211..
.22122..
.22122..

...1....
.11211..
.11211..
.22122..
.22122..
.11211..
.22122..
.22122..

........
........
........
...8....
...7....
...9....
...89...
.88977..

........
........
........
...8....
...7....
...9....
...898..
.88977..

........
........
...8....
...8....
...7....
...9....
...898..
.88977..

........
........
........
...8....
...7....
...9....
.7789...
788977..

........
...7....
...7....
...8....
...77...
..797...
.77897..
788977..

.554455.
.335533.
.445544.
.553455.
.553455.
53343445
35534553
45534554

.334433.
.335533.
.445544.
.553455.
35534553
53343445
35534553
45534554

.334433.
.335533.
.445544.
.553455.
35534553
53343445
35534553
35534553

0
</TestInput>
                    <TestOutput xml:space="preserve">No
No
Yes
Yes
No
No
Yes
Yes
Yes
No
No
No
No
No
No
Yes
Yes
Yes
Yes
Yes
No
Yes
Yes
No
No
Yes
Yes
</TestOutput>
                </TestCase>
            </TestData>
            <Solution xml:space="preserve" language="cpp" filename="" />
        </ProblemArchive>
    </ProblemList>
</PaperSetter>

