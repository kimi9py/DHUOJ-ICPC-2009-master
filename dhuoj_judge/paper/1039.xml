<?xml version="1.0" encoding="gb2312"?>
<PaperSetter checked="true">
    <PaperDetail xml:space="preserve"><PaperVersion>1</PaperVersion><PaperID>1</PaperID><PaperName>1</PaperName><PaperAuthor>1</PaperAuthor><PaperTotalTime unit="hour">5</PaperTotalTime><PaperStartTime zone="+8">1</PaperStartTime><PaperProblemSum>1</PaperProblemSum><PublicKey>MIHxMIGoBgcqhkjOOAQBMIGcAkEA/KaCzo4Syrom78z3EQ5SbbB4sF7ey80etKII864WF64B81uRpH5t9jQTxeEu0ImbzRMqzVDZkVG9xD7nN1kuFwIVAJYu3cw2nLqOuyYO5rahJtk0bjjFAkBnhHGyepz0TukaScUUfbGpqvJE8FpDTWSGkx0tFCcbnjUDC3H9c9oXkGmzLik1Yw4cIGI1TQ2iCmxBblC+eUykA0QAAkEA8ojKBedYrFoDBvrk2cvh998qmKFuHB0gXegkDXzHhk+yUprBGbpdLHVDWq8P7hPLyNPuviEvJoxz4x5kqiidgQ==</PublicKey><Signature>MCwCFDsb6aHetGHhOhIMhK3FSYMEIvyDAhQyt5VSUBkTK993YLYrdjyYzu8dtQ==</Signature><PaperReference><![CDATA[1]]></PaperReference><PaperDescribe></PaperDescribe></PaperDetail>
    <ProblemList encrypted="0">
        <ProblemArchive version="1.0" checked="false">
            <Title>Arborescence Counting</Title>
            <Author />
            <Problem contentType="html">
                <Description xml:space="preserve">"In graph theory, an arborescence is a directed graph in which, for a vertex v called the root and any other vertex u, there is exactly one directed path from v to u. In other words, an arborescence is a directed, rooted tree in which all edges point away from the root. Every arborescence is a directed acyclic graph."&lt;BR&gt;&lt;BR&gt;

-- from Wikipedia, the free encyclopedia&lt;BR&gt;&lt;BR&gt;

You are given a directed graph with N vertices, and your task is to count the number of different arborescences of size N that can be found in the given graph.&lt;BR&gt;
Two arborescences are considered different when they consist of different edges.</Description>
                <InputSpec xml:space="preserve">Input consists of multiple test cases.&lt;BR&gt;
For each test case, the first line contains one integer N described as above.&lt;BR&gt;
N lines follows, each consists of N characters, either '0' or '1', representing the adjacency matrix of the graph. &lt;BR&gt;
The directed graph contains edge (i,j) if and only if the jth character of the ith line of the matrix is '1'.
The graph consists of no more than 8 vertices.&lt;BR&gt;
End of input is indicated by a line consisting of a single 0.</InputSpec>
                <OutputSpec xml:space="preserve">For each test case, output one line consisting of one single integer, the number of arborescences.</OutputSpec>
            </Problem>
            <TestData>
                <TimeLimit>10</TimeLimit>
                <InputFile />
                <OutputFile />
                <InputFormat inputType="eof">
                    <Terminator xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </InputFormat>
                <OutputFormat>
                    <Header xml:space="preserve" />
                    <Footer xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </OutputFormat>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">2
01
10
1
0
2
00
00
2
01
00
3
000
001
000
3
011
100
100
4
0101
1000
1101
1000
4
0111
0001
1001
1010
5
01011
10110
11011
11101
11100
5
01011
00011
11001
11101
11110
5
01101
00111
11001
10100
10100
5
01011
10011
11011
11100
10110
6
011111
001111
100010
101010
111100
111100
6
010111
101111
100001
111001
000000
100100
6
011111
100100
110110
111001
111101
111110
6
011110
100100
110111
001011
101101
111100
7
0111111
1000100
0001101
1010111
1011001
1100101
1111100
8
01000000
00100000
00010000
00001000
00000100
00000010
00000001
10000000
8
01000001
10100000
01010000
00101000
00010100
00001010
00000101
10000010
7
0111101
1010111
1100111
0110111
1111011
1111001
1111000
8
01111100
00100101
10011110
11100101
01110001
11110011
11111100
11001110
8
01111010
10111110
10001010
01101111
00110010
11111011
10110101
01100010
8
01101101
10111101
11011110
11101110
01000111
10011001
11111001
11101110
8
01111111
10111111
11011111
11101111
11110111
11111011
11111101
11111110
0
</TestInput>
                    <TestOutput xml:space="preserve">2
1
0
1
0
3
8
15
320
240
87
240
1400
360
2880
1525
9300
8
64
36750
146355
107520
291102
2097152
</TestOutput>
                </TestCase>
            </TestData>
            <Solution xml:space="preserve" language="cpp" filename="" />
        </ProblemArchive>
    </ProblemList>
</PaperSetter>

