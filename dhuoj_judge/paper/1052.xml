<?xml version="1.0" encoding="gb2312"?>
<PaperSetter checked="false">
    <PaperDetail xml:space="preserve"><PaperVersion>1</PaperVersion><PaperID>1</PaperID><PaperName>1</PaperName><PaperAuthor>1</PaperAuthor><PaperTotalTime unit="hour">1</PaperTotalTime><PaperStartTime zone="+8">1</PaperStartTime><PaperProblemSum>10</PaperProblemSum><PublicKey>MIHxMIGoBgcqhkjOOAQBMIGcAkEA/KaCzo4Syrom78z3EQ5SbbB4sF7ey80etKII864WF64B81uRpH5t9jQTxeEu0ImbzRMqzVDZkVG9xD7nN1kuFwIVAJYu3cw2nLqOuyYO5rahJtk0bjjFAkBnhHGyepz0TukaScUUfbGpqvJE8FpDTWSGkx0tFCcbnjUDC3H9c9oXkGmzLik1Yw4cIGI1TQ2iCmxBblC+eUykA0QAAkEA8ojKBedYrFoDBvrk2cvh998qmKFuHB0gXegkDXzHhk+yUprBGbpdLHVDWq8P7hPLyNPuviEvJoxz4x5kqiidgQ==</PublicKey><Signature>MC0CFBEQOUnmWSbNxRC2v71jKAbNJUDNAhUAkWEHhovWe7LXknd1JXPKBDdIo+s=</Signature><PaperReference></PaperReference><PaperDescribe></PaperDescribe></PaperDetail>
    <ProblemList encrypted="0">
        <ProblemArchive version="1.0" checked="false">
    <Title>D ¡¤ Recursively Palindromic Partitions</Title>
    <Author />
    <Problem contentType="html">
        <Description xml:space="preserve">A partition of a positive integer N is a sequence of integers which sum to N, usually written with plus 
signs between the numbers of the partition.  For example &lt;BR&gt;&lt;BR&gt;
 
15 = 1+2+3+4+5 = 1+2+1+7+1+2+1 &lt;BR&gt;&lt;BR&gt;
 
A partition is palindromic if it reads the same forward and backward.  The first partition in the example 
is not palindromic while the second is.  If a partition containing m integers is palindromic, its left half is 
the first floor(m/2) integers and its right half is the last floor(m/2) integers (which must be the 
reverse of the left half. (floor(x) is the greatest integer less  than or equal to x.) &lt;BR&gt;&lt;BR&gt;
 
A partition is recursively palindromic if it is palindromic and its left half is recursively palindromic or 
empty.  Note that every integer has at least two recursively palindromic partitions one consisting of all 
ones and a second consisting of the integer itself.  The second example above is also recursively 
palindromic. &lt;BR&gt;&lt;BR&gt;
 
For example, the recursively palindromic partitions of 7 are: &lt;BR&gt;&lt;BR&gt;
 
7, 1+5+1, 2+3+2, 1+1+3+1+1, 3+1+3, 1+1+1+1+1+1+1 &lt;BR&gt;&lt;BR&gt;
 
Write a program which takes as input an integer N and outputs the number of recursively palindromic 
partitions of N.</Description>
        <InputSpec xml:space="preserve">The first line of input contains a single integer N, (1 &amp;lt;= N &amp;lt;= 1000) which is the number of data sets that 
follow.  Each data set consists of a single line of input containing a single positive integer for which 
the number of recursively palindromic partitions is to be found.  </InputSpec>
        <OutputSpec xml:space="preserve">For each data set, you should generate one line of output with the following values:  The data set 
number as a decimal integer (start counting at one), a space and the number of recursively 
palindromic partitions of the input value.  </OutputSpec>
    </Problem>
    <TestData>
        <TimeLimit>1</TimeLimit>
        <InputFile />
        <OutputFile />
        <InputFormat inputType="eof">
            <Terminator xml:space="preserve"></Terminator>
            <Seperator xml:space="preserve" layout="bottom"></Seperator>
        </InputFormat>
        <OutputFormat>
            <Header xml:space="preserve"></Header>
            <Footer xml:space="preserve"></Footer>
            <Seperator xml:space="preserve" layout="bottom"></Seperator>
        </OutputFormat>
        
        <TestCase difficulty="special">
                    <TestInput xml:space="preserve" filename="1052.in">
            </TestInput>
                    <TestOutput xml:space="preserve" filename="1052.out">
            </TestOutput>
                </TestCase>
    </TestData>
    <Solution xml:space="preserve" language="cpp" filename=""></Solution>
</ProblemArchive>


    </ProblemList>
</PaperSetter>

