<?xml version="1.0" encoding="gb2312"?>
<PaperSetter checked="true">
    <PaperDetail xml:space="preserve"><PaperVersion>1</PaperVersion><PaperID>1</PaperID><PaperName>1</PaperName><PaperAuthor>1</PaperAuthor><PaperTotalTime unit="hour">1</PaperTotalTime><PaperStartTime zone="+8">1</PaperStartTime><PaperProblemSum>1</PaperProblemSum><PublicKey>MIHxMIGoBgcqhkjOOAQBMIGcAkEA/KaCzo4Syrom78z3EQ5SbbB4sF7ey80etKII864WF64B81uRpH5t9jQTxeEu0ImbzRMqzVDZkVG9xD7nN1kuFwIVAJYu3cw2nLqOuyYO5rahJtk0bjjFAkBnhHGyepz0TukaScUUfbGpqvJE8FpDTWSGkx0tFCcbnjUDC3H9c9oXkGmzLik1Yw4cIGI1TQ2iCmxBblC+eUykA0QAAkEA8ojKBedYrFoDBvrk2cvh998qmKFuHB0gXegkDXzHhk+yUprBGbpdLHVDWq8P7hPLyNPuviEvJoxz4x5kqiidgQ==</PublicKey><Signature>MCwCFFcRbClyKmvk9ogwiGoUHqV5ZS3kAhQYhF0sZs6gdDLuLRt15wwWMWf3pQ==</Signature><PaperReference><![CDATA[1]]></PaperReference><PaperDescribe></PaperDescribe></PaperDetail>
    <ProblemList encrypted="0">
        <ProblemArchive version="1.0" checked="true">
            <Title>函数求值</Title>
            <Author>ZhuXingyin</Author>
            <Problem contentType="html">
                <Description xml:space="preserve">根据如下所示的函数，输入相应的x值，求出对应的y值。&lt;br&gt;&lt;IMG SRC="function1.jpg"&gt;</Description>
                <InputSpec xml:space="preserve">你的程序需要从标准输入设备（通常为键盘）中读入多组测试数据。每组输入数据由一行组成，每行一个，为一系列函数自变量X的值（X为实数，X不等于2）。
在行首和行尾没有多余的空格。</InputSpec>
                <OutputSpec xml:space="preserve">对应每一个输入的自变量X，输出对应的函数值Y，每行一个。Y的值保留小数点后6位，所有数据前后没有多余的空行，两组数据之间也没有多余的空行。</OutputSpec>
                <Figure filename="function1.jpg">
                    <Text />
                    <Image xml:space="preserve"></Image>
                </Figure>
            </Problem>
            <TestData>
                <TimeLimit>1</TimeLimit>
                <InputFile />
                <OutputFile />
                <InputFormat inputType="eof">
                    <Terminator xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </InputFormat>
                <OutputFormat>
                    <Header xml:space="preserve" />
                    <Footer xml:space="preserve" />
                    <Seperator xml:space="preserve" layout="bottom" />
                </OutputFormat>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">1.0
</TestInput>
                    <TestOutput xml:space="preserve">-1.000000
</TestOutput>
                </TestCase>
                <TestCase difficulty="special">
                    <TestInput xml:space="preserve">2.0
</TestInput>
                    <TestOutput xml:space="preserve">2.000000
</TestOutput>
                </TestCase>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">3.0
</TestInput>
                    <TestOutput xml:space="preserve">1.000000
</TestOutput>
                </TestCase>
                <TestCase difficulty="sample">
                    <TestInput xml:space="preserve">4.0
</TestInput>
                    <TestOutput xml:space="preserve">0.500000
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">5.0
</TestInput>
                    <TestOutput xml:space="preserve">0.333333
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">6.0
</TestInput>
                    <TestOutput xml:space="preserve">0.250000
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">7.0
</TestInput>
                    <TestOutput xml:space="preserve">0.200000
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">8.0
</TestInput>
                    <TestOutput xml:space="preserve">0.166667
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">1.99999
</TestInput>
                    <TestOutput xml:space="preserve">-99999.999999
</TestOutput>
                </TestCase>
                <TestCase difficulty="trivial">
                    <TestInput xml:space="preserve">2.00001
</TestInput>
                    <TestOutput xml:space="preserve">99999.999999
</TestOutput>
                </TestCase>
            </TestData>
            <Solution xml:space="preserve" language="cpp" filename="test">#include&lt;cstdio&gt;

using namespace std;

int main() {
    double x;
    while (scanf("%lf", &amp;x) == 1) {
        if (x == 2.0)
            printf("%.6lf\n", x);
        else
            printf("%.6f\n", 1.0 / (x - 2.0));
    }
    return 0;
}
</Solution>
        </ProblemArchive>
    </ProblemList>
</PaperSetter>

